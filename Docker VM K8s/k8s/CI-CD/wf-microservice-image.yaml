# Add kernel.unprivileged_userns_clone=1 to /etc/sysctl.conf (or /etc/sysctl.d) and run sudo sysctl --system.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: buildkit
spec:
  hostAliases:
  - ip: "192.168.2.61"
    hostnames:
    - "registry.home.lan"
  arguments:
    parameters:
      - name: repo
        value: https://github.com/schooltechx/argo-ci-cd.git
      - name: branch
        value: main
      - name: path
        value: be1
      - name: image
        value: demo/be1:v1
  entrypoint: main
  # We use a volume claim template so that we can have a shared workspace.
  volumeClaimTemplates:
    - metadata:
        name: work
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 64Mi
  templates:
    - name: main
      dag:
        tasks:
          - name: clone
            template: clone
            arguments:
              parameters:
                - name: repo
                  value: "{{workflow.parameters.repo}}"
                - name: branch
                  value: "{{workflow.parameters.branch}}"
          - name: image
            template: image
            arguments:
              parameters:
                - name: path
                  value: "{{workflow.parameters.path}}"
                - name: image
                  value: "{{workflow.parameters.image}}"
            depends: "clone"
    - name: clone
      inputs:
        parameters:
          - name: repo
          - name: branch
      container:
        volumeMounts:
          - mountPath: /work
            name: work
        image: alpine/git:v2.26.2
        workingDir: /work
        # Do a shallow clone, which is the fastest way to clone, by using the
        # --depth, --branch, and --single-branch options
        args:
          - clone
          - --depth
          - "1"
          - --branch
          - "{{inputs.parameters.branch}}"
          - --single-branch
          - "{{inputs.parameters.repo}}"
          - .
          
    - name: image
      inputs:
        parameters:
          - name: path
          - name: image
      # volumes:
      #   - name: docker-config
      #     secret:
      #       secretName: docker-config
      container:
        image: moby/buildkit:v0.11.3-rootless
        volumeMounts:
          - name: work
            mountPath: /work
          # - name: docker-config
          #   mountPath: /.docker
        workingDir: /work/{{inputs.parameters.path}}
        env:
          - name: BUILDKITD_FLAGS
            value: --oci-worker-no-process-sandbox
          # - name: DOCKER_CONFIG
          #   value: /.docker
        command:
          - buildctl-daemonless.sh
        args:
          - build
          - --frontend
          - dockerfile.v0
          - --local
          - context=.
          - --local
          - dockerfile=.
          - --output
          - type=image,name=registry.home.lan/{{inputs.parameters.image}},push=true,registry.insecure=true
        securityContext:
          privileged: true